{"version":3,"file":"static/js/82.f282a992.chunk.js","mappings":"sPAEaA,EAAWC,EAAAA,QAAAA,GAAH,6GAORC,EAAUD,EAAAA,QAAAA,IAAH,6C,mBC+BpB,EAhCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAASI,KAAKL,EAChC,GAAE,CAACC,KAGF,4BACE,kCACA,SAACN,EAAD,UACGI,EAAKO,KAAI,SAAAC,GACR,OACE,2BACE,SAACV,EAAD,CACEW,IACED,EAAME,aAnBH,mCAoBgBF,EAAME,aACrBC,EAENC,IAAKJ,EAAMK,iBAEb,wBAAKL,EAAMK,kBATJL,EAAMM,QAYlB,QAIR,C,yLCpCKC,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGd,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBL,EAAMM,IAAI,sBAF5B,cAEGC,EAFH,yBAIIA,EAAOC,KAAKC,SAJhB,gCAMHC,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEkBb,EAAMM,IAAI,eAAgB,CAC7CH,OAAQ,CACNU,MAAAA,KAJD,cAEGN,EAFH,yBAQIA,EAAOC,KAAKC,SARhB,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEiBf,EAAMM,IAAN,gBAAmBS,IAFpC,cAEGC,EAFH,yBAIIA,EAAMR,MAJV,gCAMHE,QAAQC,MAAR,MANG,gFAUA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCyB,GAAhC,gGAEmBf,EAAMM,IAAN,gBAAmBS,EAAnB,aAFnB,cAEGE,EAFH,yBAIIA,EAAQT,KAAKvB,MAJjB,gCAMHyB,QAAQC,MAAR,MANG,gFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,gGAEmBf,EAAMM,IAAN,gBAAmBS,EAAnB,aAFnB,cAEGI,EAFH,yBAIIA,EAAQX,KAAKC,SAJjB,gCAMHC,QAAQC,MAAR,MANG,gF","sources":["components/Cast/Cats.styled.js","components/Cast/Cast.jsx","utils/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CatsList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const CatsImg = styled.img`\n  max-width: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredits } from 'utils/MoviesAPI';\nimport { CatsImg, CatsList } from './Cats.styled';\nimport DefaultImg from '../../images/cast-img.jpg';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400/';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesCredits(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <CatsList>\n        {cast.map(actor => {\n          return (\n            <li key={actor.cast_id}>\n              <CatsImg\n                src={\n                  actor.profile_path\n                    ? BASE_IMG_URL + actor.profile_path\n                    : DefaultImg\n                }\n                alt={actor.original_name}\n              />\n              <h3>{actor.original_name}</h3>\n            </li>\n          );\n        })}\n      </CatsList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: '80c3b79aa997143da0fce24113ded47b' },\n});\n\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day');\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n      },\n    });\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const movie = await agent.get(`movie/${id}`);\n\n    return movie.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesCredits(id) {\n  try {\n    const credits = await agent.get(`movie/${id}/credits`);\n\n    return credits.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesReviews(id) {\n  try {\n    const reviews = await agent.get(`movie/${id}/reviews`);\n\n    return reviews.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["CatsList","styled","CatsImg","useState","cast","setCast","movieId","useParams","useEffect","getMoviesCredits","then","map","actor","src","profile_path","DefaultImg","alt","original_name","cast_id","agent","axios","baseURL","params","api_key","getTrendingMovies","get","movies","data","results","console","error","getMoviesByQuery","query","getMoviesDetails","id","movie","credits","getMoviesReviews","reviews"],"sourceRoot":""}