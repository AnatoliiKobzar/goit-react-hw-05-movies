{"version":3,"file":"static/js/840.ab552ec9.chunk.js","mappings":"+PAGaA,EAAYC,EAAAA,QAAAA,IAAH,+HAOTC,EAASD,EAAAA,QAAAA,OAAH,uOAcNE,GAAOF,EAAAA,EAAAA,SAAOG,EAAAA,GAAPH,CAAH,8M,6JCtBJI,EAASJ,EAAAA,QAAAA,OAAH,0NAYNK,EAAUL,EAAAA,QAAAA,IAAH,yEAMPM,EAAON,EAAAA,QAAAA,IAAH,wD,mBC0CjB,EApDqB,WAAO,IAAD,QACzB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBP,GAASQ,KAAKT,EAChC,GAAE,CAACC,IAMJ,OAAKF,GAKH,4BACE,UAACJ,EAAD,CAAQe,KAAK,SAASC,QAVL,WAAO,IAAD,IACzBN,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUS,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAQG,WACE,SAAC,MAAD,IADF,cAIA,UAAChB,EAAD,YACE,gBACEiB,IACEf,EAAMgB,YA7BG,mCA6B0BhB,EAAMgB,YAAcC,EAEzDC,IAAKlB,EAAMmB,SAEb,4BACE,wBAAKnB,EAAMmB,SACX,uBAAInB,EAAMoB,YACV,UAACvB,EAAD,YACE,SAAC,KAAD,CAAMgB,MAAO,CAAEC,KAAI,iBAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOO,GAAG,OAAxD,mBAGA,SAAC,KAAD,CAAMR,MAAO,CAAEC,KAAI,iBAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOO,GAAG,UAAxD,+BAON,SAAC,EAAAC,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,UA/BG,qCAmCV,C,yLC1DKC,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGd,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBL,EAAMM,IAAI,sBAF5B,cAEGC,EAFH,yBAIIA,EAAOC,KAAKC,SAJhB,gCAMHC,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEkBb,EAAMM,IAAI,eAAgB,CAC7CH,OAAQ,CACNU,MAAAA,KAJD,cAEGN,EAFH,yBAQIA,EAAOC,KAAKC,SARhB,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAAgC6B,GAAhC,gGAEiBd,EAAMM,IAAN,gBAAmBQ,IAFpC,cAEGtC,EAFH,yBAIIA,EAAMgC,MAJV,gCAMHE,QAAQC,MAAR,MANG,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gGAEmBd,EAAMM,IAAN,gBAAmBQ,EAAnB,aAFnB,cAEGE,EAFH,yBAIIA,EAAQR,KAAKS,MAJjB,gCAMHP,QAAQC,MAAR,MANG,gFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,gGAEmBd,EAAMM,IAAN,gBAAmBQ,EAAnB,aAFnB,cAEGK,EAFH,yBAIIA,EAAQX,KAAKC,SAJjB,gCAMHC,QAAQC,MAAR,MANG,gF","sources":["components/Navigation/Navigation.styled.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","utils/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 12px 24px 24px 24px;\n  background-color: #e0e0e0;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n  font-weight: 500;\n  background-color: orangered;\n`;\n\nexport const WrapBtn = styled.div`\n  display: flex;\n  gap: 16px;\n  margin: 16px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n","import { Link } from 'components/Navigation/Navigation.styled';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMoviesDetails } from 'utils/MoviesAPI';\nimport defaultImg from '../images/movie-pic.jpg';\nimport { Button, Wrap, WrapBtn } from './MovieDetails.styled';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const handelGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={handelGoBack}>\n        <FaArrowLeft />\n        Go back\n      </Button>\n      <Wrap>\n        <img\n          src={\n            movie.poster_path ? BASE_IMG_URL + movie.poster_path : defaultImg\n          }\n          alt={movie.title}\n        />\n        <div>\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <WrapBtn>\n            <Link state={{ from: location?.state?.from ?? '/' }} to=\"cast\">\n              Cast\n            </Link>\n            <Link state={{ from: location?.state?.from ?? '/' }} to=\"reviews\">\n              Reviews\n            </Link>\n          </WrapBtn>\n        </div>\n      </Wrap>\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: '80c3b79aa997143da0fce24113ded47b' },\n});\n\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day');\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n      },\n    });\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const movie = await agent.get(`movie/${id}`);\n\n    return movie.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesCredits(id) {\n  try {\n    const credits = await agent.get(`movie/${id}/credits`);\n\n    return credits.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesReviews(id) {\n  try {\n    const reviews = await agent.get(`movie/${id}/reviews`);\n\n    return reviews.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Container","styled","Header","Link","NavLink","Button","WrapBtn","Wrap","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getMoviesDetails","then","type","onClick","state","from","src","poster_path","defaultImg","alt","title","overview","to","Suspense","fallback","agent","axios","baseURL","params","api_key","getTrendingMovies","get","movies","data","results","console","error","getMoviesByQuery","query","id","getMoviesCredits","credits","cast","getMoviesReviews","reviews"],"sourceRoot":""}